---
openapi: 3.0.1
info:
  title: tarot api
  description: |
    tarot api provides access to tarot card information, spreads, and readings.
    the api follows json:api specification for consistent and predictable responses.

    rate limiting:
    - free tier: 60 requests per hour
    - basic tier: 1000 requests per hour
    - premium tier: 5000 requests per hour

    all responses include rate limit headers:
    - x-ratelimit-limit: maximum requests per hour
    - x-ratelimit-remaining: remaining requests in the current window
    - x-ratelimit-reset: unix timestamp when the rate limit resets
  version: v1
  contact:
    name: api support
    url: https://github.com/yourusername/tarot_api/issues
  license:
    name: mit
    url: https://opensource.org/licenses/mit
paths:
  "/api/v1/auth/register":
    post:
      summary: register a new user
      tags:
        - authentication
      security: []  # No auth required for registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      example: user@example.com
                    password:
                      type: string
                      format: password
                      example: SecureP@ssw0rd
                    password_confirmation:
                      type: string
                      format: password
                      example: SecureP@ssw0rd
              required:
                - user
      responses:
        '201':
          description: user registered successfully
          headers:
            X-RateLimit-Limit:
              schema:
                type: integer
              description: The number of allowed requests in the current period
              example: 60
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of remaining requests in the current period
              example: 59
            X-RateLimit-Reset:
              schema:
                type: integer
              description: The time at which the current rate limit window resets
              example: 1635724800
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiJ9...
                  refresh_token:
                    type: string
                    example: def50200641f3e...
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: 123e4567-e89b-12d3-a456-426614174000
                      email:
                        type: string
                        format: email
                        example: user@example.com
        '422':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimit'

  "/api/v1/auth/login":
    post:
      summary: login and get authentication token
      tags:
      - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
              - email
              - password
      responses:
        '200':
          description: login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refresh_token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
        '401':
          description: invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    
  "/api/v1/auth/refresh":
    post:
      summary: refresh authentication token
      tags:
      - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required:
              - refresh_token
      responses:
        '200':
          description: token refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: invalid or expired refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    
  "/api/v1/auth/profile":
    get:
      summary: get user profile from token
      tags:
      - authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                  identity_provider:
                    type: string
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    
  "/api/v1/subscriptions":
    post:
      summary: create a new subscription
      tags:
      - subscriptions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                price_id:
                  type: string
                  description: stripe price id
                plan_name:
                  type: string
                  description: descriptive name for the plan
              required:
              - price_id
              - plan_name
      responses:
        '201':
          description: subscription created
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscription_id:
                    type: string
                  status:
                    type: string
                  client_secret:
                    type: string
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    
  "/api/v1/subscriptions/{id}":
    get:
      summary: get subscription details
      tags:
      - subscriptions
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: id of the subscription
        required: true
        schema:
          type: string
      responses:
        '200':
          description: subscription details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  plan_name:
                    type: string
                  status:
                    type: string
                  current_period_end:
                    type: string
                    format: date-time
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: subscription not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    
  "/api/v1/subscriptions/{id}/cancel":
    post:
      summary: cancel a subscription
      tags:
      - subscriptions
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: id of the subscription
        required: true
        schema:
          type: string
      responses:
        '200':
          description: subscription canceled
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  status:
                    type: string
                  ends_at:
                    type: string
                    format: date-time
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: failed to cancel subscription
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    
  "/api/v1/cards/{id}":
    get:
      summary: retrieves a card
      tags:
      - cards
      parameters:
      - name: id
        in: path
        description: id of the card
        required: true
        schema:
          type: string
      responses:
        '200':
          description: card found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            description: name of the tarot card
                          description:
                            type: string
                            description: detailed description of the card's meaning
                          image_url:
                            type: string
                            nullable: true
                            description: url to the card's image if available
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                        required:
                        - name
                        - description
                        - created_at
                        - updated_at
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '404':
          description: card not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/cards":
    get:
      summary: list all cards
      tags:
      - cards
      responses:
        '200':
          description: list of cards
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                            description:
                              type: string
                            image_url:
                              type: string
                              nullable: true
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
  "/api/v1/spreads":
    get:
      summary: list all public spreads
      tags:
      - spreads
      responses:
        '200':
          description: list of spreads
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/spread'
    post:
      summary: create a new spread
      tags:
      - spreads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                spread:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    is_public:
                      type: boolean
                    user_id:
                      type: integer
                    positions:
                      type: array
                      items:
                        type: object
              required:
              - spread
      responses:
        '201':
          description: spread created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/spread_response'
        '422':
          description: validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
  "/api/v1/spreads/{id}":
    get:
      summary: get a spread by id
      tags:
      - spreads
      parameters:
      - name: id
        in: path
        description: id of the spread
        required: true
        schema:
          type: string
      responses:
        '200':
          description: spread found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/spread_response'
        '404':
          description: spread not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_response'
  "/api/v1/reading_sessions":
    get:
      summary: list user reading sessions
      tags:
      - reading_sessions
      responses:
        '200':
          description: list of reading sessions
    post:
      summary: create a new reading session
      tags:
      - reading_sessions
      responses:
        '201':
          description: reading session created
  "/api/v1/reading_sessions/{id}":
    get:
      summary: get a reading session by id
      tags:
      - reading_sessions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: reading session found
  "/api/v1/card_readings":
    get:
      summary: list card readings
      tags:
      - card_readings
      responses:
        '200':
          description: list of card readings
    post:
      summary: create a new card reading
      tags:
      - card_readings
      responses:
        '201':
          description: card reading created
  "/api/v1/card_readings/{id}":
    get:
      summary: get a card reading by id
      tags:
      - card_readings
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: card reading found
  "/api/v1/seance":
    get:
      summary: start a seance session
      tags:
      - seance
      responses:
        '200':
          description: seance session started
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from login or registration
  schemas:
    spread:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        positions:
          type: array
        is_public:
          type: boolean
        user_id:
          type: integer
    spread_response:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/spread'
    error_response:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
              title:
                type: string
              detail:
                type: string
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              detail:
                type: string
      example:
        errors:
          - code: validation_error
            message: Validation failed
            detail: Email has already been taken

    RateLimit:
      type: object
      properties:
        error:
          type: string
        retry_after:
          type: integer
      example:
        error: Rate limit exceeded
        retry_after: 3600
servers:
- url: http://localhost:3000
  description: development server
- url: https://api.tarotapi.dev
  description: production server
