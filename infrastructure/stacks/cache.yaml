resources:
  # Cache Subnet Group
  cacheSubnetGroup:
    type: aws:elasticache:SubnetGroup
    properties:
      namePrefix: "${app_name}-cache-subnet-"
      subnetIds: 
        - ${privateSubnet1.id}
        - ${privateSubnet2.id}
      tags:
        Name: ${app_name}-cache-subnet-group-${env}
        environment: ${env}
        managed-by: pulumi

  # Parameter Group with optimized settings for Rails
  cacheParameterGroup:
    type: aws:elasticache:ParameterGroup
    properties:
      name: ${app_name}-cache-pg-${env}
      family: "redis7"
      description: "Parameter group for ${app_name} ${env} Redis cache"
      parameters: {
        "maxmemory-policy": "volatile-lru",
        "activedefrag": "yes",
        "maxmemory-samples": "10"
      }
      tags:
        Name: ${app_name}-cache-pg-${env}
        environment: ${env}
        managed-by: pulumi

  # Redis Replication Group
  redisReplicationGroup:
    type: aws:elasticache:ReplicationGroup
    properties:
      replicationGroupId: "${app_name}-redis-${env}"
      description: "Redis cache for ${app_name} ${env}"
      nodeType: ${redis_node_type}
      engine: "redis"
      engineVersion: "7.0" 
      port: 6379
      parameterGroupName: ${cacheParameterGroup.name}
      subnetGroupName: ${cacheSubnetGroup.name}
      securityGroupIds: ["${cacheSecurityGroup.id}"]
      atRestEncryptionEnabled: true
      transitEncryptionEnabled: true
      multiAzEnabled: true
      automaticFailoverEnabled: true
      autoMinorVersionUpgrade: true
      snapshotRetentionLimit: 7
      snapshotWindow: "03:00-05:00"
      maintenanceWindow: "sun:05:00-sun:06:00"
      numCacheClusters: 2
      applyImmediately: true
      tags:
        Name: ${app_name}-redis-${env}
        environment: ${env}
        managed-by: pulumi

  # Store Redis Auth Token in SSM Parameter Store (if using AUTH)
  redisAuthTokenParam:
    type: aws:ssm:Parameter
    properties:
      name: "/${env}/redis_auth_token"
      type: "SecureString"
      value: ${redisReplicationGroup.authToken}
      description: "Redis auth token for ${app_name}"
      tier: "Standard"
      tags:
        Name: ${app_name}-redis-auth-token-${env}
        environment: ${env}
        managed-by: pulumi

outputs:
  redisEndpoint:
    value: ${redisReplicationGroup.primaryEndpointAddress}
  redisPort:
    value: ${redisReplicationGroup.port}
  redisUrl:
    value: "redis://${redisReplicationGroup.primaryEndpointAddress}:${redisReplicationGroup.port}/1" 