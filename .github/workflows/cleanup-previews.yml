name: cleanup preview environments

on:
  # Automatically run every day at midnight
  schedule:
    - cron: '0 0 * * *'
  
  # Allow manual cleanup
  workflow_dispatch:

jobs:
  cleanup:
    name: cleanup inactive preview environments
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: set up ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      
      - name: set up pulumi
        uses: pulumi/actions@v4
      
      - name: set up kamal
        run: gem install kamal
      
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: mx-central-1
      
      - name: run cleanup task
        run: bundle exec rake deploy:cleanup_previews
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          KAMAL_REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          KAMAL_REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      
      - name: notify about deleted environments
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { repo: { owner, repo } } = context;
            
            // Get log output to see what was cleaned up
            const fs = require('fs');
            const logOutput = fs.readFileSync(process.env.GITHUB_STEP_SUMMARY, 'utf8');
            
            // Extract any deleted preview environments
            const deletedPreviews = [];
            const regex = /preview environment ([\w-]+) is inactive/g;
            let match;
            
            while ((match = regex.exec(logOutput)) !== null) {
              deletedPreviews.push(match[1]);
            }
            
            if (deletedPreviews.length === 0) {
              return;
            }
            
            // Find PRs that might be associated with these previews
            for (const preview of deletedPreviews) {
              // Look for PRs with this preview name in the title or branch name
              const prs = await github.rest.pulls.list({
                owner,
                repo,
                state: 'open'
              });
              
              for (const pr of prs.data) {
                if (pr.head.ref.includes(preview) || pr.title.includes(preview)) {
                  // Add comment to PR
                  await github.rest.issues.createComment({
                    issue_number: pr.number,
                    owner,
                    repo,
                    body: `⚠️ Preview environment \`${preview}\` has been deleted due to inactivity. You can recreate it by pushing a new commit with the tag \`preview-${preview}\`.`
                  });
                  
                  break;
                }
              }
            } 