name: Preview Environments

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
  push:
    branches:
      - 'preview-*'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to create preview for'
        required: true
        type: string

jobs:
  check_requirements:
    name: Check Requirements
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.check.outputs.should_deploy }}
      preview_name: ${{ steps.check.outputs.preview_name }}
    steps:
      - id: check
        name: Check deployment requirements
        run: |
          # Don't create previews for Dependabot PRs
          if [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
            echo "should_deploy=false" >> $GITHUB_OUTPUT
            echo "Skipping preview for Dependabot PR"
            exit 0
          fi

          # Get the branch name
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            BRANCH="${{ github.event.inputs.branch }}"
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BRANCH="${{ github.head_ref }}"
          else
            BRANCH="${{ github.ref_name }}"
          fi

          # Clean branch name for preview URL
          PREVIEW_NAME=$(echo "$BRANCH" | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]')
          echo "preview_name=$PREVIEW_NAME" >> $GITHUB_OUTPUT

          # Set deployment flag based on event
          if [[ "${{ github.event.action }}" == "closed" ]]; then
            echo "should_deploy=false" >> $GITHUB_OUTPUT
            echo "PR closed, will cleanup preview environment"
          else
            echo "should_deploy=true" >> $GITHUB_OUTPUT
            echo "Will deploy preview environment"
          fi

  deploy_preview:
    name: Deploy Preview
    needs: check_requirements
    if: needs.check_requirements.outputs.should_deploy == 'true'
    runs-on: ubuntu-latest
    environment:
      name: preview-${{ needs.check_requirements.outputs.preview_name }}
      url: https://preview-${{ needs.check_requirements.outputs.preview_name }}.tarotapi.cards
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Set up Pulumi
        uses: pulumi/actions@v6.2.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build and push container image for preview
        run: |
          # For previews, use GitHub Container Registry to save AWS costs
          bundle exec rake container:deploy[preview,github]
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Deploy preview environment
        run: |
          bundle exec rake infra:create_preview[${{ needs.check_requirements.outputs.preview_name }}]
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const url = 'https://preview-${{ needs.check_requirements.outputs.preview_name }}.tarotapi.cards';
            const message = `ðŸš€ Preview environment deployed!\n\nYou can access it at: ${url}\n\nThis environment will be automatically cleaned up when the PR is closed or after 3 days of inactivity.`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });

  cleanup_preview:
    name: Cleanup Preview
    needs: check_requirements
    if: github.event.action == 'closed' || needs.check_requirements.outputs.should_deploy == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Set up Pulumi
        uses: pulumi/actions@v6.2.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Cleanup preview environment
        run: |
          bundle exec rake infra:destroy[preview-${{ needs.check_requirements.outputs.preview_name }}]
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const message = `ðŸ§¹ Preview environment has been cleaned up.`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            }); 