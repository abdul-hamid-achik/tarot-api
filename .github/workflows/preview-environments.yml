name: Preview Environments

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  push:
    tags:
      - 'preview-*'  # Only run for tags that start with preview-
  workflow_dispatch:
    inputs:
      environment_name:
        description: 'Name for the preview environment'
        required: true
        type: string

jobs:
  check_permissions:
    name: Check permissions
    runs-on: ubuntu-latest
    # Skip the entire workflow for Dependabot PRs
    if: github.actor != 'dependabot[bot]'
    outputs:
      allowed: ${{ steps.check.outputs.allowed }}
    steps:
      - id: check
        name: Check if user is allowed
        run: |
          if [[ "${{ github.actor }}" == "abdul-hamid-achik" ]]; then
            echo "allowed=true" >> $GITHUB_OUTPUT
          else
            echo "allowed=false" >> $GITHUB_OUTPUT
          fi

  deploy_pr_preview:
    name: Deploy PR preview
    needs: check_permissions
    if: github.event_name == 'pull_request' && needs.check_permissions.outputs.allowed == 'true'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-west-2
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      KAMAL_REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      KAMAL_REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      APP_NAME: tarotapi
      DOMAIN_NAME: tarotapi.cards
      BRANCH_NAME: ${{ github.event.pull_request.head.ref }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: set up ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      
      - name: set up pulumi
        uses: pulumi/actions@v4
      
      - name: set up kamal
        run: gem install kamal
      
      - name: configure aws credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION" >> $GITHUB_ENV
          echo "RAILS_MASTER_KEY=$RAILS_MASTER_KEY" >> $GITHUB_ENV
          echo "KAMAL_REGISTRY_USERNAME=$KAMAL_REGISTRY_USERNAME" >> $GITHUB_ENV
          echo "KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD" >> $GITHUB_ENV
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "DOMAIN_NAME=$DOMAIN_NAME" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      
      - name: Create preview environment name
        run: |
          SANITIZED_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9]/-/g')
          PREVIEW_NAME="preview-${SANITIZED_BRANCH}"
          echo "PREVIEW_NAME=$PREVIEW_NAME" >> $GITHUB_ENV
      
      - name: deploy preview environment
        run: |
          # First deploy infrastructure with Pulumi
          bundle exec rake deploy:infra:preview[${{ steps.extract_name.outputs.preview_name }}]
          
          # Then deploy app with Kamal
          bundle exec rake deploy:app:preview[${{ steps.extract_name.outputs.preview_name }}]

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = `https://${{ env.PREVIEW_NAME }}.${{ env.DOMAIN_NAME }}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🔮 Preview environment deployed: [${url}](${url})\nThis environment will be automatically cleaned up after 24 hours.`
            })

  deploy_tag_preview:
    name: Deploy tag preview
    needs: check_permissions
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/preview-') && needs.check_permissions.outputs.allowed == 'true'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-west-2
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      KAMAL_REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      KAMAL_REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      APP_NAME: tarotapi
      DOMAIN_NAME: tarotapi.cards
      TAG_NAME: ${{ github.ref_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: set up ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      
      - name: set up pulumi
        uses: pulumi/actions@v4
      
      - name: set up kamal
        run: gem install kamal
      
      - name: configure aws credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION" >> $GITHUB_ENV
          echo "RAILS_MASTER_KEY=$RAILS_MASTER_KEY" >> $GITHUB_ENV
          echo "KAMAL_REGISTRY_USERNAME=$KAMAL_REGISTRY_USERNAME" >> $GITHUB_ENV
          echo "KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD" >> $GITHUB_ENV
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "DOMAIN_NAME=$DOMAIN_NAME" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
      
      - name: Set preview name
        run: |
          # Tag name is already validated by the trigger condition
          PREVIEW_NAME="${TAG_NAME}"
          echo "PREVIEW_NAME=$PREVIEW_NAME" >> $GITHUB_ENV
      
      - name: deploy preview environment
        run: |
          # First deploy infrastructure with Pulumi
          bundle exec rake deploy:infra:preview[${{ steps.extract_name.outputs.preview_name }}]
          
          # Then deploy app with Kamal
          bundle exec rake deploy:app:preview[${{ steps.extract_name.outputs.preview_name }}]

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,workflow,job
          text: |
            🔮 *Tag Preview Environment Deployed*
            
            *Tag:* ${{ env.TAG_NAME }}
            *Preview:* ${{ env.PREVIEW_NAME }}
            *URL:* https://${{ env.PREVIEW_NAME }}.${{ env.DOMAIN_NAME }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: success()

  deploy_manual_preview:
    name: Deploy manual preview
    needs: check_permissions
    if: github.event_name == 'workflow_dispatch' && needs.check_permissions.outputs.allowed == 'true'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-west-2
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      KAMAL_REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      KAMAL_REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      APP_NAME: tarotapi
      DOMAIN_NAME: tarotapi.cards
      ENV_NAME: ${{ github.event.inputs.environment_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: set up ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      
      - name: set up pulumi
        uses: pulumi/actions@v4
      
      - name: set up kamal
        run: gem install kamal
      
      - name: configure aws credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION" >> $GITHUB_ENV
          echo "RAILS_MASTER_KEY=$RAILS_MASTER_KEY" >> $GITHUB_ENV
          echo "KAMAL_REGISTRY_USERNAME=$KAMAL_REGISTRY_USERNAME" >> $GITHUB_ENV
          echo "KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD" >> $GITHUB_ENV
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "DOMAIN_NAME=$DOMAIN_NAME" >> $GITHUB_ENV
          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_ENV
      
      - name: Validate environment name
        run: |
          if [[ ! "$ENV_NAME" =~ ^[a-zA-Z0-9][a-zA-Z0-9-]*$ ]]; then
            echo "::error::Environment name must contain only alphanumeric characters and hyphens, and cannot start with a hyphen"
            exit 1
          fi
          
          PREVIEW_NAME="preview-${ENV_NAME}"
          echo "PREVIEW_NAME=$PREVIEW_NAME" >> $GITHUB_ENV
      
      - name: deploy preview environment
        run: |
          # First deploy infrastructure with Pulumi
          bundle exec rake deploy:infra:preview[${{ steps.extract_name.outputs.preview_name }}]
          
          # Then deploy app with Kamal
          bundle exec rake deploy:app:preview[${{ steps.extract_name.outputs.preview_name }}]

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,workflow,job
          text: |
            🔮 *Manual Preview Environment Deployed*
            
            *Name:* ${{ env.ENV_NAME }}
            *Preview:* ${{ env.PREVIEW_NAME }}
            *URL:* https://${{ env.PREVIEW_NAME }}.${{ env.DOMAIN_NAME }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: success()

  notify_unauthorized:
    name: Notify unauthorized user
    needs: check_permissions
    if: needs.check_permissions.outputs.allowed == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `⚠️ Only @abdul-hamid-achik can create preview environments. Please contact them if you need a preview environment.`
            })
            
      - name: Log unauthorized tag attempt
        if: github.event_name == 'push'
        run: |
          echo "⚠️ Unauthorized user ${{ github.actor }} attempted to create a tag preview environment"
          exit 1
            
      - name: Log unauthorized manual attempt
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "⚠️ Unauthorized user ${{ github.actor }} attempted to create a manual preview environment"
          exit 1 