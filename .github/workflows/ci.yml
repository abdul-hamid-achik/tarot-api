name: ci

on:
  pull_request:
  push:
    branches: [main]

jobs:
  lint:
    name: code quality
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: lint code with rubocop
        run: bundle exec rake test:lint:rubocop

      - name: run brakeman security scan
        run: bundle exec rake test:lint:brakeman

      - name: run ruby audit
        run: bundle exec rake test:lint:ruby_audit

  test:
    name: tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: install system dependencies
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev pkg-config

      - name: checkout code
        uses: actions/checkout@v4

      - name: set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: setup test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          REDIS_URL: redis://localhost:6379/0
        run: bundle exec rake test:prepare

      - name: verify test coverage
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          REDIS_URL: redis://localhost:6379/0
        run: bundle exec rake test:verify_coverage

      - name: run model tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          REDIS_URL: redis://localhost:6379/0
        run: bundle exec rake test:models:all

      - name: run service tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          REDIS_URL: redis://localhost:6379/0
        run: bundle exec rake test:services:all

      - name: run feature tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          REDIS_URL: redis://localhost:6379/0
        run: bundle exec rake test:features:all

      - name: run subscription tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          REDIS_URL: redis://localhost:6379/0
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_TEST_KEY }}
        run: bundle exec rake test:subscriptions:all

      - name: generate coverage report
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          REDIS_URL: redis://localhost:6379/0
          COVERAGE: "true"
          SIMPLECOV_FORMATTER: "SimpleCov::Formatter::HTMLFormatter"
        run: bundle exec rake test:coverage

      - name: upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  docs:
    name: api documentation
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: setup test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: bundle exec rake test:prepare

      - name: generate api documentation
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: bundle exec rake api:docs

      - name: validate api against schema
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: bundle exec rake api:validate

      - name: upload api documentation
        uses: actions/upload-artifact@v4
        with:
          name: api-docs
          path: swagger/
          retention-days: 7

  ci_completed:
    name: ci workflow completed
    needs: [lint, test, docs]
    runs-on: ubuntu-latest
    steps:
      - name: ci completed successfully
        run: echo "ci workflow completed successfully!"
    outputs:
      status: success
