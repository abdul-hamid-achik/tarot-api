name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Compose
      run: |
        docker compose version

    - name: Build and start test services
      run: |
        # Set test environment variables
        echo "RAILS_ENV=test" >> .env
        echo "RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}" >> .env
        
        # Build and start services in detached mode
        docker compose up -d postgres redis
        
        # Build the API service
        docker compose build api

    - name: Run Tests
      run: |
        # Wait for services to be ready (they have health checks)
        docker compose run --rm api bin/rails db:prepare
        
        # Run the actual tests
        docker compose run --rm api bundle exec rake ci:all
      env:
        RAILS_ENV: test
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

    - name: Run Security Checks
      run: |
        docker compose run --rm api bundle exec rake ci:security
      env:
        RAILS_ENV: test
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

    - name: Cleanup
      if: always()
      run: docker compose down -v

  deploy-staging:
    needs: test
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: Set up Pulumi
      uses: pulumi/actions@v6.2.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build Container Image
      run: |
        bundle exec rake deploy:build[staging]
      env:
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        RAILS_ENV: staging
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

    - name: Deploy Infrastructure to Staging
      run: |
        bundle exec rake infra:deploy[staging]
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        
    - name: Push Container Image
      run: |
        # Get the container registry from Pulumi outputs
        cd infrastructure
        export CONTAINER_REGISTRY=$(pulumi stack output containerRegistry --stack staging)
        cd ..
        
        # Push using the registry from Pulumi
        bundle exec rake deploy:push[staging]
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    - name: Check Deployment Health
      run: |
        bundle exec rake deploy:health:check[staging]

  deploy-production:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: Set up Pulumi
      uses: pulumi/actions@v6.2.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build Container Image
      run: |
        bundle exec rake deploy:build[production]
      env:
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Deploy Infrastructure to Production
      run: |
        bundle exec rake infra:deploy[production]
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    - name: Push Container Image
      run: |
        # Get the container registry from Pulumi outputs
        cd infrastructure
        export CONTAINER_REGISTRY=$(pulumi stack output containerRegistry --stack production)
        cd ..
        
        # Push using the registry from Pulumi
        bundle exec rake deploy:push[production]
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    - name: Check Deployment Health
      run: |
        bundle exec rake deploy:health:check[production]
