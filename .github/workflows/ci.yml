name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tarot_api_test
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: Run CI Checks
      run: |
        bundle exec rake ci:all
      env:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/tarot_api_test
        REDIS_URL: redis://localhost:6379/1

    - name: Run Security Checks
      run: |
        bundle exec rake ci:security
      env:
        RAILS_ENV: test
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/tarot_api_test
        REDIS_URL: redis://localhost:6379/1

  deploy-staging:
    needs: test
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: Set up Pulumi
      uses: pulumi/actions@v6.2.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build Container Image
      run: |
        bundle exec rake deploy:build[staging]
      env:
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Deploy Infrastructure to Staging
      run: |
        bundle exec rake infra:deploy[staging]
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        
    - name: Push Container Image
      run: |
        # Get the container registry from Pulumi outputs
        cd infrastructure
        export CONTAINER_REGISTRY=$(pulumi stack output containerRegistry --stack staging)
        cd ..
        
        # Push using the registry from Pulumi
        bundle exec rake deploy:push[staging]
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    - name: Check Deployment Health
      run: |
        bundle exec rake deploy:health:check[staging]

  deploy-production:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: Set up Pulumi
      uses: pulumi/actions@v6.2.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build Container Image
      run: |
        bundle exec rake deploy:build[production]
      env:
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Deploy Infrastructure to Production
      run: |
        bundle exec rake infra:deploy[production]
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    - name: Push Container Image
      run: |
        # Get the container registry from Pulumi outputs
        cd infrastructure
        export CONTAINER_REGISTRY=$(pulumi stack output containerRegistry --stack production)
        cd ..
        
        # Push using the registry from Pulumi
        bundle exec rake deploy:push[production]
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    - name: Check Deployment Health
      run: |
        bundle exec rake deploy:health:check[production]
