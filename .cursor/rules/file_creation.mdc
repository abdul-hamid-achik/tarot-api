---
description: File creation standards and templates for the Tarot API project
globs: ["app/**/*", "lib/**/*", "spec/**/*"]
alwaysApply: true
---

# File Creation Guidelines

## General File Organization

- Place files in appropriate directories according to Rails conventions
- Follow the principle of one class/module per file
- Name files to match the class/module they contain
- Use lowercase with underscores for file names
- Keep directory structures shallow (avoid deep nesting)

## Ruby Files

### Models
- Location: `app/models/`
- Naming: Singular, `snake_case.rb`
- Template:
  ```ruby
  # app/models/card.rb
  class Card < ApplicationRecord
    # Constants
    
    # Associations
    
    # Validations
    
    # Scopes
    
    # Callbacks
    
    # Class methods
    
    # Instance methods
  end
  ```

### Controllers
- Location: `app/controllers/api/v1/`
- Naming: Plural, `snake_case_controller.rb`
- Template:
  ```ruby
  # app/controllers/api/v1/cards_controller.rb
  module Api
    module V1
      class CardsController < ApplicationController
        before_action :set_card, only: [:show, :update, :destroy]
        
        # GET /api/v1/cards
        def index
          # Implementation
        end
        
        # GET /api/v1/cards/:id
        def show
          # Implementation
        end
        
        # Additional actions...
        
        private
        
        def set_card
          # Implementation
        end
        
        def card_params
          # Implementation
        end
      end
    end
  end
  ```

### Services
- Location: `app/services/`
- Naming: `purpose_service.rb`
- Template:
  ```ruby
  # app/services/reading_creation_service.rb
  class ReadingCreationService
    def initialize(parameters)
      @parameters = parameters
    end
    
    def call
      # Implementation that returns a result
    end
    
    private
    
    attr_reader :parameters
    
    # Private methods
  end
  ```

## Test Files

### Model Specs
- Location: `spec/models/`
- Naming: `model_name_spec.rb`
- Template:
  ```ruby
  # spec/models/card_spec.rb
  require 'rails_helper'
  
  RSpec.describe Card, type: :model do
    # Constants tests
    
    # Association tests
    
    # Validation tests
    
    # Scope tests
    
    # Method tests
  end
  ```

### Controller Specs
- Location: `spec/controllers/api/v1/`
- Naming: `controller_name_spec.rb`
- Template:
  ```ruby
  # spec/controllers/api/v1/cards_controller_spec.rb
  require 'rails_helper'
  
  RSpec.describe Api::V1::CardsController, type: :controller do
    # Index tests
    
    # Show tests
    
    # Create tests
    
    # Additional action tests
  end
  ```

## Documentation Files

- Documentation should be created alongside code
- Use Markdown (.md) for documentation files
- Keep README files in relevant directories
- Update API documentation when endpoints change 