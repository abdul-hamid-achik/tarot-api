---
description: Rake task organization and usage guidelines for the Tarot API project
globs: ["lib/tasks/**/*.rake", "Rakefile"]
alwaysApply: false
---

# Rake Task Guidelines

## Task Files Organization

Task files are organized by functional area:

| File | Purpose | Example Tasks |
|------|---------|--------------|
| `docker.rake` | Container management | `docker:build`, `docker:clean` |
| `db.rake` | Database operations | `db:seed:cards`, `db:backup` |
| `dev.rake` | Development tools | `dev:setup`, `dev:reset` |
| `ci.rake` | CI/CD operations | `ci:test`, `ci:lint` |
| `deploy.rake` | Deployment workflows | `deploy:staging`, `deploy:production` |

## Naming Conventions

- Use lowercase snake_case for all task names
- Follow namespace:action pattern for clarity
- Group related tasks under meaningful namespaces
- Keep names concise but descriptive

## Required Practices

1. **Documentation**
   - Every task must have a clear `desc` comment
   - Use standard formatting for all task descriptions
   ```ruby
   desc "Import tarot card data from JSON files"
   task import_cards: :environment do
     # Task implementation
   end
   ```

2. **Error Handling**
   - Use TaskLogger for all output (never use puts)
   - Wrap tasks with proper error handling
   ```ruby
   task example: :environment do
     TaskLogger.with_task_logging("example") do
       # Your task code
     end
   end
   ```

3. **Dependency Management**
   - Declare prerequisites for tasks that depend on others
   ```ruby
   task process_data: [:environment, :validate_data] do
     # Task that requires validate_data to run first
   end
   ```

## Common Task Patterns

### Database Tasks
```ruby
namespace :db do
  namespace :seed do
    desc "Seed tarot card data"
    task cards: :environment do
      # Implementation
    end
  end
end
```

### Deployment Tasks
```ruby
namespace :deploy do
  desc "Deploy to production environment"
  task production: :environment do
    # Implementation
  end
  
  desc "Rollback the last deployment"
  task rollback: :environment do
    # Implementation
  end
end
```

### Development Tasks
```ruby
namespace :dev do
  desc "Setup development environment"
  task setup: [:db:create, :db:migrate, :db:seed] do
    # Additional setup
  end
end
```

## Task Guidelines

- Add tasks to existing files based on functionality
- Never create new task files - use the existing five files
- Use task dependencies to build complex workflows
- Keep tasks focused on a single purpose
- Log start/end of long-running tasks
