---
openapi: 3.0.1
info:
  title: tarot api
  version: v1
  description: |
    Tarot card reading and interpretation API with support for:
    - Individual user accounts
    - Organization accounts with multiple agents
    - OAuth2 integration
    - Subscription-based access
    - API usage quotas and analytics
  contact:
    name: API Support
    url: https://github.com/yourusername/tarot_api/issues
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  "/api/v1/auth/register":
    post:
      summary: Register a new user
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: user registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refresh_token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      email:
                        type: string
                        format: email
                    required:
                    - id
                    - email
                required:
                - token
                - refresh_token
                - user
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    password:
                      type: string
                      format: password
                    password_confirmation:
                      type: string
                      format: password
                  required:
                  - email
                  - password
                  - password_confirmation
              required:
              - user
  "/api/v1/auth/login":
    post:
      summary: Login with email and password
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refresh_token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      email:
                        type: string
                        format: email
                    required:
                    - id
                    - email
                required:
                - token
                - refresh_token
                - user
        '401':
          description: invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
              - email
              - password
  "/api/v1/auth/refresh":
    post:
      summary: Refresh authentication token
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: token refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                required:
                - token
        '401':
          description: invalid refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required:
              - refresh_token
  "/api/v1/auth/profile":
    get:
      summary: Get user profile
      tags:
      - Authentication
      security:
      - bearerAuth: []
      responses:
        '200':
          description: profile retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  email:
                    type: string
                    format: email
                  identity_provider:
                    type: string
                    nullable: true
                required:
                - id
                - email
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/auth/agent":
    post:
      summary: Create an agent API user
      tags:
      - Authentication
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: agent created
          content:
            application/json:
              schema:
                type: object
                properties:
                  agent_id:
                    type: string
                    format: uuid
                  external_id:
                    type: string
                  email:
                    type: string
                    format: email
                  api_token:
                    type: string
                required:
                - agent_id
                - external_id
                - email
                - api_token
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
              required:
              - email
              - password
              - password_confirmation
  "/api/v1/card_readings":
    get:
      summary: list all card readings
      tags:
      - card readings
      parameters:
      - name: spread_id
        in: query
        format: uuid
        required: false
        description: filter by spread id
        schema:
          type: string
      responses:
        '200':
          description: readings found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        type:
                          type: string
                        attributes:
                          type: object
                          properties:
                            spread_id:
                              type: string
                              format: uuid
                            notes:
                              type: string
                              nullable: true
                            positions:
                              type: array
                              items:
                                type: object
                                properties:
                                  position_id:
                                    type: string
                                    format: uuid
                                  card_id:
                                    type: string
                                    format: uuid
                                  interpretation:
                                    type: string
                                  reversed:
                                    type: boolean
                                required:
                                - position_id
                                - card_id
                                - interpretation
                                - reversed
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                          required:
                          - spread_id
                          - positions
                          - created_at
                          - updated_at
                      required:
                      - id
                      - type
                      - attributes
                required:
                - data
    post:
      summary: create a card reading
      tags:
      - card readings
      parameters: []
      responses:
        '201':
          description: reading created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          spread_id:
                            type: string
                            format: uuid
                          notes:
                            type: string
                            nullable: true
                          positions:
                            type: array
                            items:
                              type: object
                              properties:
                                position_id:
                                  type: string
                                  format: uuid
                                card_id:
                                  type: string
                                  format: uuid
                                interpretation:
                                  type: string
                                reversed:
                                  type: boolean
                              required:
                              - position_id
                              - card_id
                              - interpretation
                              - reversed
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                        required:
                        - spread_id
                        - positions
                        - created_at
                        - updated_at
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        source:
                          type: string
                        detail:
                          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                spread_id:
                  type: string
                  format: uuid
                notes:
                  type: string
                  nullable: true
                positions:
                  type: array
                  items:
                    type: object
                    properties:
                      position_id:
                        type: string
                        format: uuid
                      card_id:
                        type: string
                        format: uuid
                      interpretation:
                        type: string
                      reversed:
                        type: boolean
                    required:
                    - position_id
                    - card_id
                    - interpretation
                    - reversed
              required:
              - spread_id
              - positions
  "/api/v1/card_readings/{id}":
    parameters:
    - name: id
      in: path
      format: uuid
      required: true
      schema:
        type: string
    get:
      summary: retrieve a card reading
      tags:
      - card readings
      responses:
        '200':
          description: reading found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          spread_id:
                            type: string
                            format: uuid
                          notes:
                            type: string
                            nullable: true
                          positions:
                            type: array
                            items:
                              type: object
                              properties:
                                position_id:
                                  type: string
                                  format: uuid
                                card_id:
                                  type: string
                                  format: uuid
                                interpretation:
                                  type: string
                                reversed:
                                  type: boolean
                              required:
                              - position_id
                              - card_id
                              - interpretation
                              - reversed
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                        required:
                        - spread_id
                        - positions
                        - created_at
                        - updated_at
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '404':
          description: reading not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
    patch:
      summary: update a card reading
      tags:
      - card readings
      parameters: []
      responses:
        '200':
          description: reading updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          spread_id:
                            type: string
                            format: uuid
                          notes:
                            type: string
                            nullable: true
                          positions:
                            type: array
                            items:
                              type: object
                              properties:
                                position_id:
                                  type: string
                                  format: uuid
                                card_id:
                                  type: string
                                  format: uuid
                                interpretation:
                                  type: string
                                reversed:
                                  type: boolean
                              required:
                              - position_id
                              - card_id
                              - interpretation
                              - reversed
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                        required:
                        - spread_id
                        - positions
                        - created_at
                        - updated_at
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '404':
          description: reading not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        source:
                          type: string
                        detail:
                          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
                  nullable: true
                positions:
                  type: array
                  items:
                    type: object
                    properties:
                      position_id:
                        type: string
                        format: uuid
                      card_id:
                        type: string
                        format: uuid
                      interpretation:
                        type: string
                      reversed:
                        type: boolean
                    required:
                    - position_id
                    - card_id
                    - interpretation
                    - reversed
    delete:
      summary: delete a card reading
      tags:
      - card readings
      responses:
        '204':
          description: reading deleted
        '404':
          description: reading not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/spreads":
    get:
      summary: list all spreads
      tags:
      - spreads
      parameters:
      - name: name
        in: query
        required: false
        description: filter by spread name
        schema:
          type: string
      responses:
        '200':
          description: spreads found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        type:
                          type: string
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                            description:
                              type: string
                            positions:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  description:
                                    type: string
                                  order:
                                    type: integer
                                required:
                                - name
                                - description
                                - order
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                          required:
                          - name
                          - description
                          - positions
                          - created_at
                          - updated_at
                      required:
                      - id
                      - type
                      - attributes
                required:
                - data
    post:
      summary: create a spread
      tags:
      - spreads
      parameters: []
      responses:
        '201':
          description: spread created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                          description:
                            type: string
                          positions:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                description:
                                  type: string
                                order:
                                  type: integer
                              required:
                              - name
                              - description
                              - order
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                        required:
                        - name
                        - description
                        - positions
                        - created_at
                        - updated_at
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        source:
                          type: string
                        detail:
                          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                positions:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      order:
                        type: integer
                    required:
                    - name
                    - description
                    - order
              required:
              - name
              - description
              - positions
  "/api/v1/spreads/{id}":
    parameters:
    - name: id
      in: path
      format: uuid
      required: true
      schema:
        type: string
    get:
      summary: retrieve a spread
      tags:
      - spreads
      responses:
        '200':
          description: spread found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                          description:
                            type: string
                          positions:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                description:
                                  type: string
                                order:
                                  type: integer
                              required:
                              - name
                              - description
                              - order
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                        required:
                        - name
                        - description
                        - positions
                        - created_at
                        - updated_at
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '404':
          description: spread not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
    patch:
      summary: update a spread
      tags:
      - spreads
      parameters: []
      responses:
        '200':
          description: spread updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                          description:
                            type: string
                          positions:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                description:
                                  type: string
                                order:
                                  type: integer
                              required:
                              - name
                              - description
                              - order
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                        required:
                        - name
                        - description
                        - positions
                        - created_at
                        - updated_at
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '404':
          description: spread not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        source:
                          type: string
                        detail:
                          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                positions:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      order:
                        type: integer
                    required:
                    - name
                    - description
                    - order
    delete:
      summary: delete a spread
      tags:
      - spreads
      responses:
        '204':
          description: spread deleted
        '404':
          description: spread not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/tarot_cards":
    get:
      summary: list all tarot cards
      tags:
      - tarot cards
      parameters:
      - name: arcana
        in: query
        required: false
        description: filter by arcana (Major/Minor)
        schema:
          type: string
      - name: suit
        in: query
        required: false
        description: filter by suit (none/Wands/Cups/Swords/Pentacles)
        schema:
          type: string
      responses:
        '200':
          description: cards found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        type:
                          type: string
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                            arcana:
                              type: string
                              enum:
                              - Major
                              - Minor
                            suit:
                              type: string
                              enum:
                              - none
                              - Wands
                              - Cups
                              - Swords
                              - Pentacles
                            description:
                              type: string
                            rank:
                              type: string
                            symbols:
                              type: string
                            image_url:
                              type: string
                              nullable: true
                            created_at:
                              type: string
                              format: date-time
                            updated_at:
                              type: string
                              format: date-time
                          required:
                          - name
                          - arcana
                          - suit
                          - description
                          - rank
                          - symbols
                          - created_at
                          - updated_at
                      required:
                      - id
                      - type
                      - attributes
                required:
                - data
    post:
      summary: create a tarot card
      tags:
      - tarot cards
      parameters: []
      responses:
        '201':
          description: card created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                          arcana:
                            type: string
                          suit:
                            type: string
                          description:
                            type: string
                          rank:
                            type: string
                          symbols:
                            type: string
                          image_url:
                            type: string
                            nullable: true
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                        required:
                        - name
                        - arcana
                        - suit
                        - description
                        - rank
                        - symbols
                        - created_at
                        - updated_at
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        source:
                          type: string
                        detail:
                          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                arcana:
                  type: string
                  enum:
                  - Major
                  - Minor
                suit:
                  type: string
                  enum:
                  - none
                  - Wands
                  - Cups
                  - Swords
                  - Pentacles
                description:
                  type: string
                rank:
                  type: string
                symbols:
                  type: string
                image:
                  type: string
                  format: binary
                  nullable: true
              required:
              - name
              - arcana
              - suit
              - description
              - rank
              - symbols
  "/api/v1/tarot_cards/{id}":
    parameters:
    - name: id
      in: path
      format: uuid
      required: true
      schema:
        type: string
    get:
      summary: retrieve a tarot card
      tags:
      - tarot cards
      responses:
        '200':
          description: card found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                          arcana:
                            type: string
                          suit:
                            type: string
                          description:
                            type: string
                          rank:
                            type: string
                          symbols:
                            type: string
                          image_url:
                            type: string
                            nullable: true
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                        required:
                        - name
                        - arcana
                        - suit
                        - description
                        - rank
                        - symbols
                        - created_at
                        - updated_at
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '404':
          description: card not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
    patch:
      summary: update a tarot card
      tags:
      - tarot cards
      parameters: []
      responses:
        '200':
          description: card updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                          arcana:
                            type: string
                          suit:
                            type: string
                          description:
                            type: string
                          rank:
                            type: string
                          symbols:
                            type: string
                          image_url:
                            type: string
                            nullable: true
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                        required:
                        - name
                        - arcana
                        - suit
                        - description
                        - rank
                        - symbols
                        - created_at
                        - updated_at
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '404':
          description: card not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        source:
                          type: string
                        detail:
                          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                arcana:
                  type: string
                  enum:
                  - Major
                  - Minor
                suit:
                  type: string
                  enum:
                  - none
                  - Wands
                  - Cups
                  - Swords
                  - Pentacles
                description:
                  type: string
                rank:
                  type: string
                symbols:
                  type: string
                image:
                  type: string
                  format: binary
                  nullable: true
    delete:
      summary: delete a tarot card
      tags:
      - tarot cards
      responses:
        '204':
          description: card deleted
        '404':
          description: card not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/cards/{id}":
    get:
      summary: retrieves a card
      tags:
      - cards
      parameters:
      - name: id
        in: path
        description: id of the card
        required: true
        schema:
          type: string
      responses:
        '200':
          description: card found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                          description:
                            type: string
                          image_url:
                            type: string
                            nullable: true
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                        required:
                        - name
                        - description
                        - created_at
                        - updated_at
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
        '404':
          description: card not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/oauth/authorize":
    get:
      summary: OAuth2 authorization endpoint
      tags:
      - OAuth
      parameters:
      - name: response_type
        in: query
        required: true
        schema:
          type: string
          enum: [code]
      - name: client_id
        in: query
        required: true
        schema:
          type: string
      - name: redirect_uri
        in: query
        required: true
        schema:
          type: string
          format: uri
      - name: scope
        in: query
        required: true
        schema:
          type: string
      - name: state
        in: query
        required: true
        schema:
          type: string
      responses:
        '302':
          description: Redirect to authorization page
          headers:
            Location:
              schema:
                type: string
                format: uri

  "/api/v1/oauth/token":
    post:
      summary: OAuth2 token endpoint
      tags:
      - OAuth
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  enum: [authorization_code, refresh_token]
                code:
                  type: string
                refresh_token:
                  type: string
                client_id:
                  type: string
                client_secret:
                  type: string
                redirect_uri:
                  type: string
                  format: uri
              required:
                - grant_type
                - client_id
                - client_secret
      responses:
        '200':
          description: Token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'

  "/api/v1/b2b/subscriptions":
    post:
      summary: Create a B2B subscription
      tags:
      - B2B
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plan:
                  type: string
                  enum: [agent_basic, agent_premium, agent_enterprise]
                payment_method_id:
                  type: string
                agent_count:
                  type: integer
                  minimum: 1
              required:
                - plan
                - payment_method_id
                - agent_count
      responses:
        '201':
          description: B2B subscription created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BSubscription'

  "/api/v1/b2b/api_keys":
    post:
      summary: Generate API keys for B2B account
      tags:
      - B2B
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expiry:
                  type: string
                  format: date-time
                scopes:
                  type: array
                  items:
                    type: string
                    enum: [read, write, admin]
              required:
                - name
                - scopes
      responses:
        '201':
          description: API key generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'

  "/api/v1/b2b/usage":
    get:
      summary: Get API usage metrics
      tags:
      - B2B
      security:
      - bearerAuth: []
      parameters:
      - name: start_date
        in: query
        schema:
          type: string
          format: date
      - name: end_date
        in: query
        schema:
          type: string
          format: date
      responses:
        '200':
          description: Usage metrics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageMetrics'

  "/api/v1/organizations":
    post:
      summary: Create a new organization
      tags:
      - Organizations
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreate'
      responses:
        '201':
          description: Organization created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    get:
      summary: List organizations for current user
      tags:
      - Organizations
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Organizations retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'

  "/api/v1/organizations/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    get:
      summary: Get organization details
      tags:
      - Organizations
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Organization details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    patch:
      summary: Update organization details
      tags:
      - Organizations
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdate'
      responses:
        '200':
          description: Organization updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'

  "/api/v1/organizations/{id}/members":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    post:
      summary: Add member to organization
      tags:
      - Organizations
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberCreate'
      responses:
        '201':
          description: Member added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
    get:
      summary: List organization members
      tags:
      - Organizations
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Members retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Member'

  "/api/v1/organizations/{id}/api_keys":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    post:
      summary: Generate API key for organization
      tags:
      - Organizations
      security:
      - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKeyCreate'
      responses:
        '201':
          description: API key generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'
    get:
      summary: List organization API keys
      tags:
      - Organizations
      security:
      - bearerAuth: []
      responses:
        '200':
          description: API keys retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIKey'

  "/api/v1/organizations/{id}/usage":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    get:
      summary: Get organization usage metrics
      tags:
      - Organizations
      security:
      - bearerAuth: []
      parameters:
      - name: start_date
        in: query
        schema:
          type: string
          format: date
      - name: end_date
        in: query
        schema:
          type: string
          format: date
      - name: granularity
        in: query
        schema:
          type: string
          enum: [hourly, daily, weekly, monthly]
      responses:
        '200':
          description: Usage metrics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageMetrics'

  "/api/v1/organizations/{id}/analytics":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    get:
      summary: Get organization analytics
      tags:
      - Organizations
      security:
      - bearerAuth: []
      parameters:
      - name: start_date
        in: query
        schema:
          type: string
          format: date
      - name: end_date
        in: query
        schema:
          type: string
          format: date
      - name: metrics
        in: query
        schema:
          type: array
          items:
            type: string
            enum: [readings, api_calls, active_users, response_times]
      responses:
        '200':
          description: Analytics retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'

components:
  schemas:
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          enum: [Bearer]
        expires_in:
          type: integer
        refresh_token:
          type: string
        scope:
          type: string
      required:
        - access_token
        - token_type
        - expires_in
        - refresh_token
        - scope

    B2BSubscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
        plan:
          type: string
          enum: [agent_basic, agent_premium, agent_enterprise]
        features:
          type: object
          properties:
            max_agents:
              type: integer
            api_rate_limit:
              type: integer
            custom_spreads:
              type: boolean
            white_label:
              type: boolean
            priority_support:
              type: boolean
        quotas:
          type: object
          properties:
            daily_readings:
              type: integer
            monthly_api_calls:
              type: integer
            concurrent_sessions:
              type: integer
        status:
          type: string
          enum: [active, past_due, canceled]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - plan
        - features
        - quotas
        - status
        - created_at
        - updated_at

    APIKey:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        key:
          type: string
        scopes:
          type: array
          items:
            type: string
        expires_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - key
        - scopes
        - created_at

    UsageMetrics:
      type: object
      properties:
        period:
          type: object
          properties:
            start:
              type: string
              format: date
            end:
              type: string
              format: date
        api_calls:
          type: object
          properties:
            total:
              type: integer
            by_endpoint:
              type: object
              additionalProperties:
                type: integer
        readings:
          type: object
          properties:
            total:
              type: integer
            by_spread:
              type: object
              additionalProperties:
                type: integer
        quota_usage:
          type: object
          properties:
            daily_readings:
              type: object
              properties:
                used:
                  type: integer
                limit:
                  type: integer
            monthly_api_calls:
              type: object
              properties:
                used:
                  type: integer
                limit:
                  type: integer
      required:
        - period
        - api_calls
        - readings
        - quota_usage

    OrganizationCreate:
      type: object
      properties:
        name:
          type: string
        plan:
          type: string
          enum: [starter, professional, enterprise]
        billing_email:
          type: string
          format: email
      required:
        - name
        - plan
        - billing_email

    OrganizationUpdate:
      type: object
      properties:
        name:
          type: string
        billing_email:
          type: string
          format: email
        settings:
          type: object
          properties:
            white_label:
              type: boolean
            custom_domain:
              type: string
            webhook_url:
              type: string
              format: uri

    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        plan:
          type: string
        features:
          type: object
          properties:
            max_members:
              type: integer
            api_rate_limit:
              type: integer
            custom_spreads:
              type: boolean
            white_label:
              type: boolean
            priority_support:
              type: boolean
        quotas:
          type: object
          properties:
            daily_readings:
              type: integer
            monthly_api_calls:
              type: integer
            concurrent_sessions:
              type: integer
        status:
          type: string
          enum: [active, past_due, canceled]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - plan
        - features
        - quotas
        - status
        - created_at
        - updated_at

    MemberCreate:
      type: object
      properties:
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin, member, reader]
        name:
          type: string
      required:
        - email
        - role

    Member:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
        status:
          type: string
          enum: [active, invited, disabled]
        last_active:
          type: string
          format: date-time
      required:
        - id
        - email
        - role
        - status

    APIKeyCreate:
      type: object
      properties:
        name:
          type: string
        expiry:
          type: string
          format: date-time
        scopes:
          type: array
          items:
            type: string
            enum: [read, write, admin]
      required:
        - name
        - scopes

    Analytics:
      type: object
      properties:
        period:
          type: object
          properties:
            start:
              type: string
              format: date
            end:
              type: string
              format: date
        metrics:
          type: object
          properties:
            readings:
              type: object
              properties:
                total:
                  type: integer
                trend:
                  type: number
                breakdown:
                  type: object
                  additionalProperties:
                    type: integer
            api_calls:
              type: object
              properties:
                total:
                  type: integer
                trend:
                  type: number
                breakdown:
                  type: object
                  additionalProperties:
                    type: integer
            active_users:
              type: object
              properties:
                total:
                  type: integer
                trend:
                  type: number
                by_role:
                  type: object
                  additionalProperties:
                    type: integer
            response_times:
              type: object
              properties:
                average:
                  type: number
                trend:
                  type: number
                by_endpoint:
                  type: object
                  additionalProperties:
                    type: number
      required:
        - period
        - metrics

  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /api/v1/oauth/authorize
          tokenUrl: /api/v1/oauth/token
          scopes:
            read: Read access to API
            write: Write access to API
            admin: Administrative access
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from login or registration
    basicAuth:
      type: http
      scheme: basic
      description: HTTP Basic Auth using email and password
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for agent/service authentication

security:
  - bearerAuth: []
  - basicAuth: []
  - apiKeyAuth: []
  - oauth2: []
